apiVersion: kustz/v1

namespace: demo-demo
name: srv-webapp-demo

service:
  name: nginx
  image: docker.io/library/nginx:alpine
  replicas: 2
  imagePullPolicy: never
  imagePullSecrets:
    - aliyun-repo
  envs:
    pairs:
      key1: value1
    files:
      - foo.yml
    configmaps:
      - srv-webapp-demo-envs:true
    secrets:
      - srv-webapp-demo-envs:false
  ports:
    - "80:8080" # cluster ip
    - "udp://!9998:8889" # 随机 nodeport
    # - "!20080:80:8080" # 指定 nodeport
  resources:
    cpu: 10m/20m
    memory: 10Mi/20Mi
  #   nvidia.com/gpu: 1/1
  probes:
    liveness:
      action: http://:8080/healthy
      headers:
        token: "token123"
      initialDelaySeconds: 30
    readiness:
      action: tcp://0.0.0.0:8080
    startup:
      action: cat /tmp/healthy

### dns config for pod
### https://kubernetes.io/docs/concepts/services-networking/dns-pod-service/
# dns:
#   config:
#     nameservers:
#       - 10.133.10.55
#     searches:
#       - ns1.svc.cluster.local
#       - my.dns.search.suffix
#     options:
#       - ndots:2
#       - edns0
#   policy: None

ingress:
  annotations:
    k1: v1
    k2: v2
  rules:
    - http://api.example.com/ping?tls=star-example-com&svc=srv-webapp-demo:8080
    - http://api.balala.com/*

# https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/configmapgenerator/
configmaps:
  envs:
    - name: srv-webapp-demo-envs
      files:
        - configmap.env

# https://kubectl.docs.kubernetes.io/references/kustomize/kustomization/secretgenerator/
secrets:
  literals:
    - name: srv-webapp-demo-literals
      files:
        - foo.yml
      # type: Opaque # default
  files:
    - name: srv-webapp-demo-files
      files:
        - tls.crt=catsecret/tls.crt
        - tls.key=secret/tls.key
      type: "kubernetes.io/tls"
    - name: aliyun-repo
      files:
        - .dockerconfigjson=docker-config.json
      type: kubernetes.io/dockerconfigjson
